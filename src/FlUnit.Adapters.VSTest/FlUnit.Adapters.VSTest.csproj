<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFrameworks>netstandard2.0;net6.0</TargetFrameworks>
		<AssemblyName>FlUnit.VS.TestAdapter</AssemblyName>
		<RootNamespace>FlUnit.Adapters</RootNamespace>
		<!--<PackageId>FlUnit.Adapters.VSTest</PackageId>-->

		<GeneratePackageOnBuild>true</GeneratePackageOnBuild>
        <PackageIcon>FlUnitIcon.png</PackageIcon>
		<PackageReadmeFile>README.md</PackageReadmeFile>
		<Description>FlUnit adapter for VSTest</Description>
		
		<DevelopmentDependency>true</DevelopmentDependency>		
		<BuildOutputTargetFolder>build</BuildOutputTargetFolder>
	</PropertyGroup>

	<ItemGroup>
		<InternalsVisibleTo Include="FlUnit.Adapters.VSTest.Tests" />
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="FlUnit.Abstractions" Version="3.0.0-pre.3" GeneratePathProperty="true">
			<PrivateAssets>all</PrivateAssets>
		</PackageReference>
		<PackageReference Include="Microsoft.SourceLink.GitHub" Version="8.0.0">
		  <PrivateAssets>all</PrivateAssets>
		  <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="Microsoft.TestPlatform.ObjectModel" Version="17.9.0">
			<PrivateAssets>all</PrivateAssets>
		</PackageReference>
	</ItemGroup>

    <!--
    Would love to be able to just do: 	
    <None Include="$(PkgFlUnit_Abstractions)\lib\$(TargetFramework)\FlUnit.Abstractions.dll" Pack="true" PackagePath="build\$(TargetFramework)" Visible="false" />
    ..but GeneratePathProperty doesn't work when targeting multiple frameworks (because of infinite restore loop risks that I don't quite have my head around),
    and similarly TargetFramework isn't set at the top level - only have TargetFrameworks. So instead, we use CopyLocalLockFileAssemblies to pull all dependency
	assemblies into build output, then TargetsForTfmSpecificBuildOutput to pack the abstractions package. Refs:
	- https://github.com/NuGet/Home/issues/11721
    - https://learn.microsoft.com/en-us/nuget/reference/msbuild-targets#targetsfortfmspecificbuildoutput
    -->
	<PropertyGroup>
		<CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
		<TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificBuildOutput);GetExtraPackageFiles</TargetsForTfmSpecificBuildOutput>
	</PropertyGroup>
	<Target Name="GetExtraPackageFiles">
		<ItemGroup>
			<BuildOutputInPackage Include="$(OutputPath)FlUnit.Abstractions.dll" />
		</ItemGroup>
	</Target>

    <ItemGroup>
		<None Include="..\FlUnitIcon.png" Pack="true" PackagePath="\" Link="_PackageFiles\FlUnitIcon.png" />
		<None Include="_PackageFiles\FlUnit.Adapters.VSTest.md" Pack="true" PackagePath="README.md" />
		<None Include="_PackageFiles\build\**\*" Pack="true" PackagePath="build\" />
		<None Include="_PackageFiles\lib\**\*" Pack="true" PackagePath="lib\" />
	</ItemGroup>

    <ItemGroup>
      <Compile Update="Messages.Designer.cs">
        <DesignTime>True</DesignTime>
        <AutoGen>True</AutoGen>
        <DependentUpon>Messages.resx</DependentUpon>
      </Compile>
    </ItemGroup>

    <ItemGroup>
      <EmbeddedResource Update="Messages.resx">
        <Generator>ResXFileCodeGenerator</Generator>
        <LastGenOutput>Messages.Designer.cs</LastGenOutput>
      </EmbeddedResource>
    </ItemGroup>

    <ItemGroup>
      <None Update="_PackageFiles\FlUnit.Adapters.VSTest.md" Pack="true" />
    </ItemGroup>
	
</Project>
